---
# Test profile configuration
server:
  servlet:
    context-path: /airport-reservation-system/api

# Test Database Configuration
spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/patika_airport_reservation_system_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:passrmzn}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      initialization-fail-timeout: -1
    
  # JPA/Hibernate properties
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 1000
          lob:
            non_contextual_creation: true
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: public
    
  # Database initialization
  sql:
    init:
      mode: never  # Changed from 'always' to 'never' to prevent data.sql from running on every start
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql
      separator: ;
      encoding: UTF-8
      continue-on-error: true

# Test-specific properties
app:
  generate-test-data: true  # Always generate test data in test profile
  test:
    data:
      enabled: true
      clear-database: true  # Clear database before tests

# Logging configuration for tests
logging:
  level:
    root: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.jdbc.core.JdbcTemplate: WARN
    com.sakinr.airportreservationsystem: DEBUG
    
# Test-specific security configuration (if needed)
security:
  jwt:
    token:
      secret-key: test-secret-key-1234567890-1234567890-1234567890
      expire-length: 3600000  # 1 hour for tests
